{"version":3,"sources":["firebase-config.js","contexts/AuthContext.js","Hooks/useMounted.jsx","components/Signin.jsx","components/Signup.jsx","components/ProductCard.jsx","components/Products.jsx","components/Product.jsx","components/Store.jsx","components/Bidding.jsx","components/Profile.jsx","components/NavbarComp.jsx","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","getStorage","db","getFirestore","auth","getAuth","AuthContext","createContext","currentUser","register","Promise","login","logout","signInWithGoogle","useAuth","useContext","AuthContextProvider","children","useState","setCurrentUser","loading","setLoading","useEffect","unsubscribe","onAuthStateChanged","user","value","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","provider","GoogleAuthProvider","signInWithPopup","Provider","useMounted","mounted","useRef","current","Signin","setEmail","setPassword","isSubmitting","setIsSubmitting","navigate","useNavigate","Row","Col","lg","span","offset","className","style","color","fontWeight","Form","onSubmit","e","a","preventDefault","then","response","console","log","catch","error","alert","finally","FormGroup","controlId","FormControl","type","placeholder","onChange","target","Button","variant","background","border","disabled","Spinner","as","animation","size","role","onClick","Curenuser","setDoc","doc","uid","name","displayName","img","photoURL","merge","width","src","to","Signup","setName","updateProfile","required","ProductCard","price","duration","pID","merchantID","timerDays","setTimerDays","timerHours","setTimerHours","timerMins","setTimerMins","timerSecs","setTimerSecs","location","useLocation","interval","deleteProduct","deleteDoc","countdownDate","Date","getTime","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","updateDoc","expired","clearInterval","startTimer","checkIfNaN","isNaN","CardGroup","Card","Img","height","objectFit","marginBottom","Body","Title","Text","pathname","Products","products","setProducts","q","query","collection","where","onSnapshot","snapshot","docs","map","data","id","Carousel","Item","alt","Caption","display","gridTemplateColumns","prod","currentPrice","auctionEnd","Product","productName","setProductName","productCurrentPrice","setProductCurrentPrice","productPreviousPrice","setProductPreviousPrice","productDuration","setProductDuration","productImg","setProductImg","productDes","setProductDes","merchantName","setMerchantName","highestBidID","sethighestBidID","setMerchantID","highestBidName","sethighestBidName","merchantImg","setMerchantImg","inputPrice","setInputPrice","showBidInput","setShowBidInput","handleClose","split","separator","numb","str","toString","replace","join","lastPrice","description","merchantIMG","bidHandler","docRef","addCommaPrice","newField","bider","arrayUnion","parseInt","Container","borderRadius","padding","fontSize","textAlign","Image","fluid","thumbnail","textDecoration","marginRight","marginLeft","borderBottom","Modal","show","onHide","Header","closeButton","Group","Label","column","sm","Control","wordWrap","roundedCircle","Store","productPhoto","setProductPhoto","productPrice","setProductPrice","progress","setProgress","productCollectionRef","String","monthNames","prototype","addDays","date","this","valueOf","setDate","getDate","upDate","slice","month","getMonth","year","getFullYear","getHours","getMinutes","getSeconds","uploadFiles","file","folderRef","ref","uploadTask","uploadBytesResumable","on","prog","round","bytesTransferred","totalBytes","err","getDownloadURL","url","create_UUID","dt","c","r","random","files","urlPhoto","day","dayStart","auctionStart","rounded","ProgressBar","event","URL","createObjectURL","accept","InputGroup","Select","product","Bidding","Profile","userName","setUserName","userPhoto","setUserPhoto","userEmail","setUserEmail","photo","setPhoto","Tab","defaultActiveKey","Nav","bg","Link","eventKey","Content","Pane","backgroundColor","userRef","NavbarComp","navigation","Navbar","expand","sticky","Brand","Toggle","Collapse","activeKey","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88ae9d37.chunk.js","sourcesContent":["import { getFirestore } from \"@firebase/firestore\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"@firebase/auth\";\r\nimport { getStorage } from \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDu_JHUlPdgx_9IweFDRMkLTkxOeBxDOkA\",\r\n  authDomain: \"test-387bd.firebaseapp.com\",\r\n  databaseURL: \"https://test-387bd-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"test-387bd\",\r\n  storageBucket: \"test-387bd.appspot.com\",\r\n  messagingSenderId: \"553939266178\",\r\n  appId: \"1:553939266178:web:ae59559946b470db5f629b\",\r\n  measurementId: \"G-4DTNGLYSY8\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const storage = getStorage(app);\r\nexport const db = getFirestore(app);\r\nexport const auth = getAuth(app);\r\n","import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../firebase-config\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"@firebase/auth\";\r\nconst AuthContext = createContext({\r\n  currentUser: null,\r\n  register: () => Promise,\r\n  login: () => Promise,\r\n  logout: () => Promise,\r\n  signInWithGoogle: () => Promise,\r\n});\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\nexport default function AuthContextProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  function signInWithGoogle(){\r\n    const provider = new GoogleAuthProvider();\r\n    return signInWithPopup(auth, provider)\r\n  }\r\n\r\n  function register(email, password) {\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  }\r\n  function login(email, password) {\r\n    return signInWithEmailAndPassword(auth,email, password);\r\n  }\r\n\r\n  function logout(){\r\n    return signOut(auth)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    const unsubscribe = onAuthStateChanged(auth, user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n    return () => {\r\n      unsubscribe()\r\n    }\r\n  },[])\r\n\r\n  const value = {\r\n    currentUser,\r\n    register,\r\n    login,\r\n    logout,\r\n    signInWithGoogle,\r\n  };\r\n  return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>;\r\n}\r\n","import React, { useRef,useEffect } from \"react\";\r\n\r\nexport default function useMounted() {\r\n  const mounted = useRef(false);\r\n  useEffect(() => {\r\n    mounted.current = true;\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n  return mounted\r\n}\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Form,\r\n  fieldset,\r\n  Button,\r\n  FloatingLabel,\r\n  FormGroup,\r\n  FormControl,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport useMounted from \"../Hooks/useMounted\";\r\nimport { auth, db } from \"../firebase-config\";\r\nimport { doc, setDoc } from \"@firebase/firestore\";\r\nconst Signin = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const { currentUser,login, signInWithGoogle } = useAuth();\r\n  const navigate = useNavigate();\r\n  const mounted = useMounted();\r\n  return (\r\n    <Row>\r\n      <Col lg={{ span: 6, offset: 3 }}>\r\n        <div className=\"p-5\">\r\n          <h3 className=\"mb-3\" style={{ color: \"#232a41\", fontWeight: \"bold\" }}>\r\n            Sign in\r\n          </h3>\r\n          <Form\r\n            onSubmit={async (e) => {\r\n              e.preventDefault();\r\n              setIsSubmitting(true);\r\n              login(email, password)\r\n                .then((response) => {\r\n                  console.log(response);\r\n                  navigate(-1);\r\n                })\r\n                .catch((error) => alert(error))\r\n                .finally(()=> mounted.current && setIsSubmitting(false))\r\n            }}\r\n          >\r\n            <FormGroup controlId=\"formEmail\">\r\n              <FormControl\r\n                type=\"email\"\r\n                className=\"mb-3\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></FormControl>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formPassword\">\r\n              <FormControl\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              ></FormControl>\r\n            </FormGroup>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"mt-3 col-12\"\r\n              style={{ background: \"#31728e\", border: \"0px\" }}\r\n              disabled={isSubmitting}\r\n            >\r\n              { isSubmitting && <Spinner  as='span' animation='grow' size='sm' role='status' aria-hidden=\"true\"></Spinner> }\r\n              Sign in\r\n            </Button>\r\n          </Form>\r\n          <hr></hr>\r\n          <Button\r\n            onClick={() =>\r\n              signInWithGoogle()\r\n                .then(async () => {\r\n                  const Curenuser = auth.currentUser;\r\n                  await setDoc(\r\n                    doc(db, \"data\", `${Curenuser.uid}`),\r\n                    {\r\n                      name: Curenuser.displayName,\r\n                      img: Curenuser.photoURL,\r\n                    },\r\n                    { merge: true }\r\n                  );\r\n                })\r\n                .then(() => console.log(currentUser))\r\n                .then(() => navigate(\"/\"))\r\n                .catch((error) => console.log(error))\r\n            }\r\n            variant=\"outline-danger\"\r\n            className=\"col-12 mt-3\"\r\n            style={{ fontWeight: \"500\" }}\r\n          >\r\n            <img\r\n              style={{ width: \"25px\" }}\r\n              src=\"https://icones.pro/wp-content/uploads/2021/02/google-icone-symbole-png-logo-rouge.png\"\r\n            />{\" \"}\r\n            Sign in with Google\r\n          </Button>\r\n          <p className=\"mt-3\">\r\n            Don't have an account? <Link to=\"/Signup\">sign up</Link>\r\n          </p>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Form,\r\n  fieldset,\r\n  Button,\r\n  FloatingLabel,\r\n  FormGroup,\r\n  FormControl,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport useMounted from \"../Hooks/useMounted\";\r\nimport { auth, db } from \"../firebase-config\";\r\nimport {\r\n  getDocs,\r\n  collection,\r\n  addDoc,\r\n  updateDoc,\r\n  doc,\r\n  deleteDoc,\r\n  setDoc,\r\n} from \"firebase/firestore\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const { currentUser, register, signInWithGoogle } = useAuth();\r\n\r\n  const navigate = useNavigate();\r\n  const mounted = useMounted();\r\n  return (\r\n    <Row>\r\n      <Col lg={{ span: 6, offset: 3 }}>\r\n        <div className=\"p-5\">\r\n          <h3 className=\"mb-3\" style={{ color: \"#432f2f\", fontWeight: \"bold\" }}>\r\n            Register\r\n          </h3>\r\n          <Form\r\n            onSubmit={async (e) => {\r\n              e.preventDefault();\r\n              setIsSubmitting(true);\r\n              register(email, password)\r\n                .then(async () => {\r\n                  const Curenuser = auth.currentUser;\r\n                  await setDoc(\r\n                    doc(db, \"data\", `${Curenuser.uid}`),\r\n                    {\r\n                      name: name,\r\n                      img: \"https://media.istockphoto.com/vectors/male-profile-icon-white-on-the-blue-background-vector-id470100848?k=20&m=470100848&s=612x612&w=0&h=ZfWwz2F2E8ZyaYEhFjRdVExvLpcuZHUhrPG3jOEbUAk=\",\r\n                    },\r\n                    { merge: true }\r\n                  );\r\n                })\r\n                .then(() =>\r\n                  updateProfile(auth.currentUser, {\r\n                    displayName: name,\r\n                    photoURL:\r\n                      \"https://media.istockphoto.com/vectors/male-profile-icon-white-on-the-blue-background-vector-id470100848?k=20&m=470100848&s=612x612&w=0&h=ZfWwz2F2E8ZyaYEhFjRdVExvLpcuZHUhrPG3jOEbUAk=\",\r\n                  })\r\n                )\r\n                // .then((response) => console.log(response))\r\n                .then(() => navigate(-1))\r\n                .catch((error) => alert(error))\r\n                .finally(() => mounted.current && setIsSubmitting(false));\r\n            }}\r\n          >\r\n            <FormGroup controlId=\"formName\">\r\n              <FormControl\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                type=\"text\"\r\n                className=\"mb-3\"\r\n                placeholder=\"Firstname and Lastname\"\r\n                required\r\n              ></FormControl>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formEmail\">\r\n              <FormControl\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                type=\"email\"\r\n                className=\"mb-3\"\r\n                placeholder=\"Email\"\r\n                required\r\n              ></FormControl>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formPassword\">\r\n              <FormControl\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n              ></FormControl>\r\n            </FormGroup>\r\n            {/* <FormGroup controlId=\"formPhoneNo\">\r\n        <FormControl type=\"text\" placeholder=\"Phone\"></FormControl>\r\n      </FormGroup> */}\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              className=\"mt-3 col-12\"\r\n              style={{ background: \"#b14d4d\", border: \"0px\" }}\r\n              disabled={isSubmitting}\r\n            >\r\n              {isSubmitting && (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  animation=\"grow\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                ></Spinner>\r\n              )}\r\n              Sign up\r\n            </Button>\r\n          </Form>\r\n\r\n          <hr></hr>\r\n          <Button\r\n            onClick={() =>\r\n              signInWithGoogle()\r\n                // .then((user) => console.log(user))\r\n                .then(async () => {\r\n                  const Curenuser = auth.currentUser;\r\n                  await setDoc(\r\n                    doc(db, \"data\", `${Curenuser.uid}`),\r\n                    {\r\n                      name: Curenuser.displayName,\r\n                      img: Curenuser.photoURL,\r\n                    },\r\n                    { merge: true }\r\n                  );\r\n                })\r\n                .then(() => console.log(currentUser))\r\n                .then(() => navigate(\"/\"))\r\n                .catch((error) => console.log(error))\r\n            }\r\n            variant=\"outline-danger\"\r\n            className=\"col-12 mt-3\"\r\n            style={{ fontWeight: \"500\" }}\r\n          >\r\n            <img\r\n              style={{ width: \"25px\" }}\r\n              src=\"https://icones.pro/wp-content/uploads/2021/02/google-icone-symbole-png-logo-rouge.png\"\r\n            />{\" \"}\r\n            Sign in with Google\r\n          </Button>\r\n          <p className=\"mt-3\">\r\n            Already have an account? <Link to=\"/Signin\">sign in</Link>\r\n          </p>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import { deleteDoc, doc, updateDoc } from \"@firebase/firestore\";\r\nimport Button from \"@restart/ui/esm/Button\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Card, CardGroup } from \"react-bootstrap\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { auth, db } from \"../firebase-config\";\r\n\r\nconst ProductCard = ({ name, img, price, duration, pID, merchantID }) => {\r\n  const [timerDays, setTimerDays] = useState('--');\r\n  const [timerHours, setTimerHours] = useState('--');\r\n  const [timerMins, setTimerMins] = useState('--');\r\n  const [timerSecs, setTimerSecs] = useState('--');\r\n  const location = useLocation();\r\n  let interval = useRef();\r\n\r\n  const deleteProduct = async () => {\r\n    await deleteDoc(doc(db, \"products\", pID));\r\n  };\r\n\r\n  const startTimer = () => {\r\n    const countdownDate = new Date(duration).getTime();\r\n    interval = setInterval(async () => {\r\n      const now = new Date().getTime();\r\n      const distance = countdownDate - now;\r\n\r\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor(\r\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n      if (distance < 0) {\r\n        await updateDoc(doc(db, \"products\", pID), { expired: true });\r\n        clearInterval(interval);\r\n      } else {\r\n        setTimerDays(days);\r\n        setTimerHours(hours);\r\n        setTimerMins(minutes);\r\n        setTimerSecs(seconds);\r\n      }\r\n    },1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    startTimer();\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  });\r\n\r\n  const checkIfNaN = () => {\r\n    if (\r\n      isNaN(timerDays) &&\r\n      isNaN(timerHours) &&\r\n      isNaN(timerMins) &&\r\n      isNaN(timerSecs)\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  console.log(checkIfNaN())\r\n  return (\r\n    <div>\r\n      <CardGroup className=\"m-1\">\r\n        <Card style={{ width: \"10rem\" }}>\r\n          <Link to={`/Product/${pID}`}>\r\n            <Card.Img\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"250px\",\r\n                objectFit: \"cover\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n              variant=\"top\"\r\n              src={img}\r\n            />\r\n          </Link>\r\n          <Card.Body>\r\n            <Card.Title>{name}</Card.Title>\r\n            <hr></hr>\r\n            {!checkIfNaN() ? (\r\n              <Card.Text>\r\n                {timerDays} Days {timerHours}:{timerMins}:{timerSecs}\r\n              </Card.Text>\r\n            ) : (\r\n              <Card.Text style={{ color: \"red\" }}>Times expired..</Card.Text>\r\n            )}\r\n            <Card.Text>฿{price}</Card.Text>\r\n            {location.pathname == \"/Profile\" && auth.currentUser.uid == merchantID && (\r\n              <Button\r\n                className=\"btn btn-danger float-end\"\r\n                onClick={() => deleteProduct()}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Card.Body>\r\n        </Card>\r\n      </CardGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Carousel, } from \"react-bootstrap\";\r\nimport \"./Form.css\";\r\nimport { db } from \"../firebase-config\";\r\nimport { collection, onSnapshot, query, where } from \"@firebase/firestore\";\r\nimport ProductCard from \"./ProductCard\";\r\n\r\nconst Products = () => {\r\n\r\n  const [products, setProducts] = useState(null);\r\n  const q = query(collection(db, \"products\"),where('expired', '==', false))\r\n  useEffect( async () => {\r\n      onSnapshot(q, (snapshot) => {\r\n      setProducts(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n     });\r\n  }, []);\r\n  console.log(products);\r\n  return (\r\n    <Fragment>\r\n      <Carousel className=\"mb-3 mt-2\">\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://brand.assets.adidas.com/image/upload/f_auto,q_auto,fl_lossy/if_w_gt_1920,w_1920/thTH/Images/originals-fw21-sean_wotherspoon-superstar_black-hp-mh-d_tcm329-793660.jpg\"\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>First slide label</h3>\r\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://brand.assets.adidas.com/image/upload/f_auto,q_auto,fl_lossy/if_w_gt_1920,w_1920/thTH/Images/atmos-mh-d_tcm329-804692.jpeg\"\r\n            alt=\"Second slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Second slide label</h3>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://brand.assets.adidas.com/image/upload/f_auto,q_auto,fl_lossy/if_w_gt_1920,w_1920/thTH/Images/H23105-Originals-FW21-adidasmarimekko-educate-clp-mh-large-d_tcm329-725810.jpg\"\r\n            alt=\"Third slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Third slide label</h3>\r\n            <p>\r\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n            </p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      <h3>Product</h3>\r\n      <hr></hr>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(auto-fill, minmax(250px,1fr)\",\r\n        }}\r\n        className=\"productList\"\r\n      >\r\n        {products &&\r\n          products.map((prod) => {\r\n            return (\r\n              <ProductCard key={prod.pID}\r\n                name={prod.name}\r\n                img={prod.img}\r\n                price={prod.currentPrice}\r\n                duration={prod.auctionEnd}\r\n                pID = {prod.pID}\r\n              ></ProductCard>\r\n            );\r\n          })}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Products;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Button,\r\n  Image,\r\n  FormGroup,\r\n  Form,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport \"./Form.css\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  updateDoc,\r\n  getDocs,\r\n  onSnapshot,\r\n  query,\r\n  where,\r\n  arrayUnion,\r\n} from \"@firebase/firestore\";\r\nimport { auth, db } from \"../firebase-config\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nconst Product = () => {\r\n  const { currentUser } = useAuth();\r\n  const [productName, setProductName] = useState();\r\n  const [productCurrentPrice, setProductCurrentPrice] = useState();\r\n  const [productPreviousPrice, setProductPreviousPrice] = useState();\r\n  const [productDuration, setProductDuration] = useState();\r\n  const [productImg, setProductImg] = useState();\r\n  const [productDes, setProductDes] = useState();\r\n  const [merchantName, setMerchantName] = useState();\r\n  const [highestBidID, sethighestBidID] = useState();\r\n  const [merchantID, setMerchantID] = useState();\r\n  const [highestBidName, sethighestBidName] = useState();\r\n  const [merchantImg, setMerchantImg] = useState();\r\n  const [timerDays, setTimerDays] = useState(\"--\");\r\n  const [timerHours, setTimerHours] = useState(\"--\");\r\n  const [timerMins, setTimerMins] = useState(\"--\");\r\n  const [timerSecs, setTimerSecs] = useState(\"--\");\r\n  const [inputPrice, setInputPrice] = useState();\r\n  const [showBidInput, setShowBidInput] = useState();\r\n  const handleClose = () => setShowBidInput(false);\r\n  const handleShow = () => setShowBidInput(true);\r\n  const location = useLocation();\r\n  const id = location.pathname.split(\"/\")[2];\r\n  let interval = useRef();\r\n  const startTimer = () => {\r\n    const countdownDate = new Date(productDuration).getTime();\r\n    interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const distance = countdownDate - now;\r\n\r\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor(\r\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n      );\r\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n      if (distance < 0) {\r\n        clearInterval(interval);\r\n      } else {\r\n        setTimerSecs(seconds);\r\n        setTimerDays(days);\r\n        setTimerHours(hours);\r\n        setTimerMins(minutes);\r\n      }\r\n    }, 1000);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    onSnapshot(doc(db, \"products\", id), (snapshot) => {\r\n      setProductName(snapshot.data().name);\r\n      setProductCurrentPrice(snapshot.data().currentPrice);\r\n      setProductPreviousPrice(snapshot.data().lastPrice);\r\n      setProductDuration(snapshot.data().auctionEnd);\r\n      setProductImg(snapshot.data().img);\r\n      setProductDes(snapshot.data().description);\r\n      setMerchantName(snapshot.data().merchantName);\r\n      setMerchantImg(snapshot.data().merchantIMG);\r\n      sethighestBidID(snapshot.data().highestBidID);\r\n      sethighestBidName(snapshot.data().highestBidName);\r\n      setMerchantID(snapshot.data().merchantID);\r\n    });\r\n    startTimer();\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  });\r\n\r\n  function separator(numb) {\r\n    var str = numb.toString().split(\".\");\r\n    str[0] = str[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return str.join(\".\");\r\n  }\r\n\r\n  const bidHandler = async () => {\r\n    const docRef = doc(db, \"products\", id);\r\n    const addCommaPrice = separator(inputPrice);\r\n    const newField = {\r\n      currentPrice: addCommaPrice,\r\n      highestBidID: auth.currentUser.uid,\r\n      highestBidName: auth.currentUser.displayName,\r\n      lastPrice: productCurrentPrice,\r\n      bider: arrayUnion(auth.currentUser.uid),\r\n    };\r\n    if (parseInt(inputPrice) > parseInt(productCurrentPrice)) {\r\n      console.log(productCurrentPrice);\r\n      console.log(inputPrice);\r\n      await updateDoc(docRef, newField);\r\n    } else {\r\n      alert(\"your bid must higher than current bid\");\r\n    }\r\n  };\r\n  const checkIfNaN = () => {\r\n    if (isNaN(timerDays) &&\r\n      isNaN(timerHours) &&\r\n      isNaN(timerMins) &&\r\n      isNaN(timerSecs)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  console.log(timerDays)\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row\r\n          style={{ background: \"white\", borderRadius: \"5px\", padding: \"1rem\" }}\r\n          className=\"mt-3\"\r\n        >\r\n          <span style={{ fontSize: \"2rem\", fontWeight: \"500\" }}>\r\n            {productName}\r\n          </span>\r\n          <hr></hr>\r\n          <Col style={{ background: \"\", textAlign: \"center\" }}>\r\n            <div>\r\n              <Image\r\n                style={{\r\n                  width: \"80%\",\r\n                  height: \"480px\",\r\n                  objectFit: \"cover\",\r\n                  marginBottom: \"5px\",\r\n                }}\r\n                fluid\r\n                thumbnail\r\n                src={productImg}\r\n              ></Image>\r\n            </div>\r\n          </Col>\r\n          <Col>\r\n            <Row className=\"mt-3\">\r\n              <Col>\r\n                <Row>\r\n                  <Col className=\"mt-1\">\r\n                    <h1\r\n                      style={{\r\n                        width: \"auto\",\r\n                        color: \"#d0011b\",\r\n                        background: \"#fafafa\",\r\n                        padding: \"10px\",\r\n                        borderRadius: \"5px\",\r\n                      }}\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          color: \"gray\",\r\n                          fontSize: \"1rem\",\r\n                          textDecoration: \"line-through\",\r\n                        }}\r\n                      >\r\n                        {productPreviousPrice}\r\n                      </span>{\" \"}\r\n                      ฿{productCurrentPrice}⇪{\"\"}\r\n                      <span\r\n                        style={{\r\n                          color: \"gray\",\r\n                          fontSize: \"1rem\",\r\n                        }}\r\n                      >\r\n                        {!checkIfNaN() &&\r\n                          highestBidID !== \"\" && (\r\n                            <span style={{ color: \"green\" }}>\r\n                              {highestBidName} is highest bid\r\n                            </span>\r\n                          )}\r\n                      </span>\r\n                    </h1>\r\n                  </Col>\r\n                </Row>\r\n                <div\r\n                  style={{\r\n                    marginRight: \"auto\",\r\n                    marginLeft: \"auto\",\r\n                    width: \"350px\",\r\n                    padding: \"0.1rem 1.6rem 0.1rem 1.6rem\",\r\n                    display: \"grid\",\r\n                    gridTemplateColumns: \"repeat(7,1fr)\",\r\n                    textAlign: \"center\",\r\n                    borderBottom: \"1.5px solid #d0cccc\",\r\n                  }}\r\n                  className=\"mt-4\"\r\n                >\r\n                  <section>\r\n                    <p style={{ fontSize: \"2rem\", marginBottom: \"0\" }}>\r\n                      {timerDays}\r\n                    </p>\r\n                    <p>\r\n                      <small>Days</small>\r\n                    </p>\r\n                  </section>\r\n                  <span style={{ fontSize: \"2rem\", marginBottom: \"0\" }}>:</span>\r\n                  <section>\r\n                    <p style={{ fontSize: \"2rem\", marginBottom: \"0\" }}>\r\n                      {timerHours}\r\n                    </p>\r\n                    <p>\r\n                      <small>Hours</small>\r\n                    </p>\r\n                  </section>\r\n                  <span style={{ fontSize: \"2rem\", marginBottom: \"0\" }}>:</span>\r\n                  <section>\r\n                    <p style={{ fontSize: \"2rem\", marginBottom: \"0\" }}>\r\n                      {timerMins}\r\n                    </p>\r\n                    <p>\r\n                      <small>Minutes</small>\r\n                    </p>\r\n                  </section>\r\n                  <span style={{ fontSize: \"2rem\", marginBottom: \"0\" }}>:</span>\r\n                  <section>\r\n                    <p style={{ fontSize: \"2rem\", marginBottom: \"0\" }}>\r\n                      {timerSecs}\r\n                    </p>\r\n                    <p>\r\n                      <small>Seconds</small>\r\n                    </p>\r\n                  </section>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            {checkIfNaN() && (\r\n              <h3\r\n                className=\"mt-3\"\r\n                style={{ textAlign: \"center\", color: \"red\" }}\r\n              >\r\n                Auction is over..\r\n              </h3>\r\n            )}\r\n            {merchantID !== auth.currentUser.uid && !checkIfNaN() && (\r\n              <Row style={{ textAlign: \"center\" }} className=\"mt-5\">\r\n                <Col></Col>\r\n                <Col>\r\n                  <Button\r\n                    onClick={handleShow}\r\n                    style={{ height: \"45px\", width: \"200px\"}}\r\n                  >\r\n                    ประมูลตอนนี้\r\n                  </Button>\r\n                </Col>\r\n                <Col></Col>\r\n              </Row>\r\n            )}\r\n            {merchantID !== auth.currentUser.uid &&\r\n              checkIfNaN() &&\r\n              highestBidID !== \"\" && (\r\n                <h3\r\n                  className=\"mt-3\"\r\n                  style={{ textAlign: \"center\", color: \"green\" }}\r\n                >\r\n                  {highestBidName} has the highest bid!\r\n                </h3>\r\n              )}\r\n            <Row>\r\n              <Modal show={showBidInput} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>ประมูลตอนนี้</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Form>\r\n                    <Form.Group\r\n                      as={Row}\r\n                      className=\"mb-3 mt-4\"\r\n                      controlId=\"formName\"\r\n                    >\r\n                      <Form.Label column sm=\"2\">\r\n                        Price :\r\n                      </Form.Label>\r\n                      <Col sm=\"8\">\r\n                        <Form.Control\r\n                          type=\"number\"\r\n                          className=\"mb-3\"\r\n                          placeholder=\"price\"\r\n                          value={inputPrice}\r\n                          onChange={(e) => setInputPrice(e.target.value)}\r\n                          required\r\n                        />\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <div className=\"float-end\">\r\n                      <Button\r\n                        className=\"me-1\"\r\n                        variant=\"secondary\"\r\n                        onClick={handleClose}\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                          bidHandler();\r\n                          handleClose();\r\n                        }}\r\n                      >\r\n                        Confirm\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </Modal.Body>\r\n              </Modal>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Row\r\n          className=\"mt-5 align-items-center p-3\"\r\n          style={{ background: \"#fafafa\", wordWrap: \"break-word\" }}\r\n        >\r\n          <Col lg={1}>\r\n            <Image\r\n              style={{ width: \"60px\", height: \"60px\", objectFit: \"cover\" }}\r\n              src={merchantImg}\r\n              alt=\"merchant image\"\r\n              className=\"ms-4\"\r\n              roundedCircle\r\n            ></Image>\r\n          </Col>\r\n          <Col>\r\n            <h5>{merchantName}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row\r\n          className=\"mt-5\"\r\n          style={{ background: \"#fafafa\", wordWrap: \"break-word\" }}\r\n        >\r\n          <h4>Description: </h4>\r\n          <p>{productDes}</p>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  addDoc,\r\n  arrayUnion,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  onSnapshot,\r\n  query,\r\n  setDoc,\r\n  updateDoc,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport { auth, db, storage } from \"../firebase-config\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  Modal,\r\n  Row,\r\n  Image,\r\n  Container,\r\n  InputGroup,\r\n  ProgressBar,\r\n} from \"react-bootstrap\";\r\nimport { getDownloadURL, ref, uploadBytesResumable } from \"@firebase/storage\";\r\n\r\nconst Store = () => {\r\n  const [productPhoto, setProductPhoto] = useState(\r\n    \"https://via.placeholder.com/300x300.png\"\r\n  );\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productDes, setProductDes] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(null);\r\n  const [productDuration, setProductDuration] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [products, setProducts] = useState([]);\r\n  const productCollectionRef = query(\r\n    collection(db, \"products\"),\r\n    where(\"merchantID\", \"==\", String(auth.currentUser.uid))\r\n  );\r\n  const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  Date.prototype.addDays = function (days) {\r\n    var date = new Date(this.valueOf());\r\n    console.log(date);\r\n    date.setDate(date.getDate() + days);\r\n    console.log(days);\r\n    console.log(date);\r\n    return date;\r\n  };\r\n\r\n  let orDate = new Date();\r\n  let upDate = orDate.addDays(parseInt(productDuration));\r\n  let date = (\"0\" + upDate.getDate()).slice(-2);\r\n  let month = monthNames[upDate.getMonth()];\r\n  let year = upDate.getFullYear();\r\n  let hours = upDate.getHours();\r\n  let minutes = upDate.getMinutes();\r\n  let seconds = upDate.getSeconds();\r\n\r\n  useEffect(() => {\r\n    onSnapshot(productCollectionRef, (snapshot) => {\r\n      setProducts(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    });\r\n  }, []);\r\n\r\n  const onImageChange = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setProductPhoto(URL.createObjectURL(event.target.files[0]));\r\n    }\r\n  };\r\n\r\n  const uploadFiles = (file) => {\r\n    const folderRef = ref(storage, `/Images/${file.name}`);\r\n    if (!file) return;\r\n    const uploadTask = uploadBytesResumable(folderRef, file);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const prog = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(prog);\r\n      },\r\n      (err) => console.log(err),\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => console.log(url));\r\n      }\r\n    );\r\n  };\r\n\r\n  function separator(numb) {\r\n    var str = numb.toString().split(\".\");\r\n    str[0] = str[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return str.join(\".\");\r\n  }\r\n  function create_UUID() {\r\n    var dt = new Date().getTime();\r\n    var uuid = \"xxxxxxxxxxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n      var r = (dt + Math.random() * 16) % 16 | 0;\r\n      dt = Math.floor(dt / 16);\r\n      return (c == \"x\" ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n    return uuid;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        onSubmit={async (e) => {\r\n          e.preventDefault();\r\n          const file = e.target[0].files[0];\r\n          uploadFiles(file);\r\n          const urlPhoto = await getDownloadURL(\r\n            ref(storage, `/Images/${file.name}`)\r\n          );\r\n          const id = create_UUID();\r\n          var day = new Date();\r\n          var dayStart =\r\n            monthNames[day.getMonth()] +\r\n            \" \" +\r\n            day.getDate() +\r\n            \" \" +\r\n            day.getFullYear() +\r\n            \" \" +\r\n            day.getHours() +\r\n            \":\" +\r\n            day.getMinutes() +\r\n            \":\" +\r\n            day.getSeconds();\r\n          const addCommaPrice = separator(productPrice);\r\n          await setDoc(doc(db, \"products\", id), {\r\n            name: productName,\r\n            img: String(urlPhoto),\r\n            pID: id,\r\n            expired: false,\r\n            merchantID: auth.currentUser.uid,\r\n            merchantName: auth.currentUser.displayName,\r\n            merchantIMG: auth.currentUser.photoURL,\r\n            bider: [],\r\n            highestBidID: \"\",\r\n            highestBidName: \"\",\r\n            description: productDes,\r\n            currentPrice: addCommaPrice,\r\n            lastPrice: \"0\",\r\n            auctionStart: dayStart,\r\n            auctionEnd:\r\n              month +\r\n              \" \" +\r\n              date +\r\n              \" \" +\r\n              year +\r\n              \" \" +\r\n              hours +\r\n              \":\" +\r\n              minutes +\r\n              \":\" +\r\n              seconds,\r\n          });\r\n        }}\r\n      >\r\n        {/* <Modal.Header closeButton> */}\r\n        <Modal.Title>Place your product</Modal.Title>\r\n        {/* </Modal.Header> */}\r\n        {/* <Modal.Body> */}\r\n        <Container>\r\n          <FormGroup controlId=\"editPhoto\" style={{ padding: \"20px 100px\" }}>\r\n            <div style={{ textAlign: \"center\", marginBottom: \"10px\" }}>\r\n              <h4 style={{ marginBottom: \"40px\" }}>Product picture</h4>\r\n              <Image\r\n                alt=\"product picture\"\r\n                src={productPhoto}\r\n                style={{\r\n                  width: \"250px\",\r\n                  height: \"250px\",\r\n                  objectFit: \"cover\",\r\n                  marginBottom: \"30px\",\r\n                }}\r\n                rounded\r\n              />\r\n              <ProgressBar now={progress}></ProgressBar>\r\n            </div>\r\n            <FormControl\r\n              type=\"file\"\r\n              placeholder=\"Name\"\r\n              onChange={onImageChange}\r\n              accept=\".jpeg,.png,.jpg\"\r\n            ></FormControl>\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formName\">\r\n            <Form.Label sm=\"2\">Name :</Form.Label>\r\n            <FormControl\r\n              value={productName}\r\n              onChange={(e) => setProductName(e.target.value)}\r\n              type=\"text\"\r\n              className=\"mb-3\"\r\n              placeholder=\"Product name\"\r\n              required\r\n            ></FormControl>\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formName\">\r\n            <Form.Label sm=\"2\">Description :</Form.Label>\r\n            <FormControl\r\n              value={productDes}\r\n              onChange={(e) => setProductDes(e.target.value)}\r\n              as=\"textarea\"\r\n              className=\"mb-3\"\r\n              placeholder=\"Description\"\r\n              style={{ height: \"100px\" }}\r\n            ></FormControl>\r\n          </FormGroup>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup controlId=\"formPrice\">\r\n                <Form.Label sm=\"2\">Starting price :</Form.Label>\r\n                <InputGroup>\r\n                  <InputGroup.Text className=\"mb-3\" id=\"inputGroupPrepend\">\r\n                    ฿\r\n                  </InputGroup.Text>\r\n                  <FormControl\r\n                    value={productPrice}\r\n                    onChange={(e) => setProductPrice(e.target.value)}\r\n                    aria-describedby=\"inputGroupPrepend\"\r\n                    type=\"number\"\r\n                    className=\"mb-3\"\r\n                    placeholder=\"0\"\r\n                    required\r\n                  ></FormControl>\r\n                </InputGroup>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col className=\"col-4\">\r\n              <FormGroup as={Row} controlId=\"formDate\">\r\n                <Form.Label sm=\"2\">Duration :</Form.Label>\r\n                <Col>\r\n                  <Form.Select\r\n                    value={productDuration}\r\n                    onChange={(e) => {\r\n                      setProductDuration(e.target.value);\r\n                    }}\r\n                    as={Col}\r\n                    aria-label=\"Day\"\r\n                  >\r\n                    <option value={1}>1 Days</option>\r\n                    <option value={2}>2 Days</option>\r\n                    <option value={3}>3 Days</option>\r\n                    <option value={4}>4 Days</option>\r\n                    <option value={5}>5 Days</option>\r\n                    <option value={6}>6 Days</option>\r\n                    <option value={7}>7 Days</option>\r\n                  </Form.Select>\r\n                </Col>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3\"></Row>\r\n        </Container>\r\n        <Button type=\"submit\" variant=\"success\">\r\n          Start auction!\r\n        </Button>\r\n      </Form>\r\n      {/* -------------------------------------------------------------------------------- */}\r\n      <hr></hr>\r\n      <Row className=\"mt-1\">\r\n        <Col>\r\n          <h3>Your product</h3>\r\n        </Col>\r\n      </Row>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(auto-fill, minmax(200px,1fr)\",\r\n        }}\r\n        className=\"productList\"\r\n      >\r\n        {products &&\r\n          products.map((product) => {\r\n            return (\r\n              <div>\r\n                <ProductCard\r\n                  duration={product.auctionEnd}\r\n                  name={product.name}\r\n                  img={product.img}\r\n                  price={product.currentPrice}\r\n                  pID={product.pID}\r\n                  merchantID={product.merchantID}\r\n                ></ProductCard>\r\n              </div>\r\n            );\r\n          })}\r\n          {products === null && <p>Empty..</p>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Store;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  query,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport { auth, db } from \"../firebase-config\";\r\nimport ProductCard from \"./ProductCard\";\r\n\r\nconst Bidding = () => {\r\n  const [products, setProducts] = useState();\r\n  const productCollectionRef = query(\r\n    collection(db, \"products\"),\r\n    where(\"bider\", \"array-contains\", String(auth.currentUser.uid))\r\n  );\r\n  useEffect(() => {\r\n    onSnapshot(productCollectionRef, (snapshot) => {\r\n      setProducts(snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    });\r\n  }, []);\r\n  console.log(products);\r\n  return (\r\n    <div>\r\n      <h3 className=\"mt-5\">Bidding</h3>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(auto-fill, minmax(200px,1fr)\",\r\n        }}\r\n        className=\"productList\"\r\n      >\r\n        {products &&\r\n          products.map((product) => {\r\n            return (\r\n              <div>\r\n                <ProductCard\r\n                  duration={product.auctionEnd}\r\n                  name={product.name}\r\n                  img={product.img}\r\n                  price={product.currentPrice}\r\n                  pID={product.pID}\r\n                ></ProductCard>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bidding;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Form.css\";\r\nimport {\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  Image,\r\n  Nav,\r\n  Row,\r\n  Tab,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport Products from \"./Products\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { auth, db, storage } from \"../firebase-config\";\r\nimport {\r\n  getDocs,\r\n  collection,\r\n  addDoc,\r\n  updateDoc,\r\n  doc,\r\n  deleteDoc,\r\n  setDoc,\r\n} from \"firebase/firestore\";\r\nimport Product from \"./Product\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\nimport useMounted from \"../Hooks/useMounted\";\r\nimport Store from \"./Store\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\r\nimport Bidding from \"./Bidding\";\r\n\r\nconst _currentUser = auth.currentUser;\r\n// console.log(`${_currentUser.photoURL}`)\r\nconst Profile = () => {\r\n  const [userName, setUserName] = useState();\r\n  const [userPhoto, setUserPhoto] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [name, setName] = useState(auth.currentUser.displayName);\r\n  const [photo, setPhoto] = useState(auth.currentUser.photoURL);\r\n  const { currentUser } = useAuth();\r\n  const mounted = useMounted();\r\n\r\n  const onImageChange = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setPhoto(URL.createObjectURL(event.target.files[0]));\r\n      console.log(event.target.files[0]);\r\n    }\r\n  };\r\n  const uploadFiles = (file) => {\r\n    const folderRef = ref(storage, `/profile_pic/${file.name}`);\r\n    if (!file) return;\r\n    const uploadTask = uploadBytesResumable(folderRef, file);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const prog = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n      },\r\n      (err) => console.log(err),\r\n      () => {\r\n        getDownloadURL(uploadTask.snapshot.ref).then((url) => console.log(url));\r\n      }\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    const getUserProfile = () => {\r\n      setUserName(auth.currentUser.displayName);\r\n      setUserPhoto(auth.currentUser.photoURL);\r\n      setUserEmail(auth.currentUser.email);\r\n    };\r\n    getUserProfile();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* ---------- Tab panel ------------ */}\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n        <Row>\r\n          <Col sm={3}>\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <Image\r\n                src={userPhoto}\r\n                style={{\r\n                  width: \"130px\",\r\n                  height: \"130px\",\r\n                  objectFit: \"cover\",\r\n                  marginBottom: \"20px\",\r\n                }}\r\n                className=\"mt-5\"\r\n                roundedCircle\r\n              />\r\n              <h3>{userName}</h3>\r\n              <p>{userEmail}</p>\r\n            </div>\r\n            <hr></hr>\r\n            <Nav variant=\"pills\" bg='dark' className=\"flex-column\">\r\n              <h5>Profile</h5>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"first\">Profile</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"second\">Bidding</Nav.Link>\r\n              </Nav.Item>\r\n              <hr></hr>\r\n              <h5>Store</h5>\r\n              <Nav.Item>\r\n                <Nav.Link eventKey=\"third\">Store</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n            <Tab.Content>\r\n              {/* ------- Tab 1 ---------- */}\r\n              <Tab.Pane eventKey=\"first\">\r\n                <Row>\r\n                  <Col\r\n                    style={{ backgroundColor: \"white\" }}\r\n                    className=\"p-5 mt-5 col-10 offset-1\"\r\n                  >\r\n                    <h3>Edit Profile</h3>\r\n                    <hr></hr>\r\n                    <Form\r\n                      onSubmit={async (e) => {\r\n                        e.preventDefault();\r\n                        const file = e.target[1].files[0];\r\n                        uploadFiles(file);\r\n                        const urlPhoto = await getDownloadURL(\r\n                          ref(storage, `/profile_pic/${file.name}`)\r\n                        );\r\n                        updateProfile(auth.currentUser, {\r\n                          displayName: name,\r\n                          photoURL: urlPhoto,\r\n                        })\r\n                          .then(async () => {\r\n                            const userRef = doc(\r\n                              db,\r\n                              \"data\",\r\n                              auth.currentUser.uid\r\n                            );\r\n                            await updateDoc(userRef, {\r\n                              name: name,\r\n                              img: urlPhoto,\r\n                            });\r\n                          })\r\n                          .catch((error) => {\r\n                            console.log(error);\r\n                          })\r\n                          .then(() => {\r\n                            setUserName(auth.currentUser.displayName);\r\n                            setUserPhoto(auth.currentUser.photoURL);\r\n                          })\r\n                          .finally(\r\n                            () => mounted.current && setIsSubmitting(false)\r\n                          );\r\n                        setIsSubmitting(true);\r\n                      }}\r\n                    >\r\n                      <Form.Group\r\n                        as={Row}\r\n                        className=\"mb-3 mt-4\"\r\n                        controlId=\"formName\"\r\n                      >\r\n                        <Form.Label column sm=\"2\">\r\n                          Name :\r\n                        </Form.Label>\r\n                        <Col sm=\"8\">\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            className=\"mb-3\"\r\n                            placeholder=\"Name\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Group>\r\n                      <FormGroup\r\n                        controlId=\"editPhoto\"\r\n                        style={{ padding: \"20px 100px\" }}\r\n                      >\r\n                        <div\r\n                          style={{ textAlign: \"center\", marginBottom: \"10px\" }}\r\n                        >\r\n                          <h4 style={{ marginBottom: \"40px\" }}>\r\n                            Change profile picture\r\n                          </h4>\r\n                          <Image\r\n                            src={photo}\r\n                            style={{\r\n                              width: \"150px\",\r\n                              height: \"150px\",\r\n                              objectFit: \"cover\",\r\n                              marginBottom: \"30px\",\r\n                            }}\r\n                            roundedCircle\r\n                          />\r\n                        </div>\r\n                        <FormControl\r\n                          type=\"file\"\r\n                          placeholder=\"Name\"\r\n                          onChange={onImageChange}\r\n                          accept=\".jpeg,.png,.jpg\"\r\n                        ></FormControl>\r\n                      </FormGroup>\r\n                      <Button\r\n                        disabled={isSubmitting}\r\n                        type=\"submit\"\r\n                        className=\"col-3 mt-3\"\r\n                      >\r\n                        Done\r\n                        {isSubmitting && (\r\n                          <Spinner\r\n                            as=\"span\"\r\n                            animation=\"grow\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                          ></Spinner>\r\n                        )}\r\n                      </Button>\r\n                    </Form>\r\n                    <hr></hr>\r\n                  </Col>\r\n                </Row>\r\n              </Tab.Pane>\r\n              {/* ------- Tab 2 ---------- */}\r\n              <Tab.Pane eventKey=\"second\">\r\n                <Bidding></Bidding>\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"third\">\r\n                <Store></Store>\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nimport { Link, useLocation,useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nconst NavbarComp = () => {\r\n  const { currentUser, logout } = useAuth();\r\n  const location = useLocation();\r\n  const navigation = useNavigate();\r\n\r\n  return (\r\n    <Navbar style={{backgroundColor:'#11142a'}} variant=\"dark\" expand=\"lg\" sticky=\"top\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand as={Link} to=\"/\">\r\n          <img\r\n            src=\"https://cdn.discordapp.com/attachments/692996198663192616/918431241303367700/auction.png\"\r\n            style={{ width: \"35px\", marginRight: \"0.4rem\" }}\r\n          />\r\n          <strong style={{fontSize:'1.3 rem'}}>OrionBid</strong>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto my-2 my-lg-0\">\r\n          </Nav>\r\n          <Nav activeKey={location.pathname}>\r\n            {!currentUser && <Nav.Link eventKey={\"/Signin\"} as={Link} to=\"/Signin\">Sign in</Nav.Link>}\r\n            {!currentUser && <Nav.Link eventKey={\"/Signup\"} as={Link} to=\"/Signup\">Register</Nav.Link>}\r\n            {currentUser &&<Nav.Link eventKey={\"/Profile\"} as={Link} to=\"/Profile\">Profile</Nav.Link>}\r\n            {currentUser &&<Nav.Link\r\n              onClick={async (e) => {\r\n                e.preventDefault();\r\n                alert(\"logout user\");\r\n                logout();\r\n                navigation('/')\r\n              }}\r\n            >\r\n              Logout\r\n            </Nav.Link>}\r\n            \r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavbarComp;\r\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Singin from \"./components/Signin\";\nimport Singup from \"./components/Signup\";\nimport Products from \"./components/Products\";\nimport ProductPage from \"./components/Product\";\nimport Profile from \"./components/Profile\";\nimport Navbar from \"./components/NavbarComp\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport AuthContextProvider, { useAuth } from \"./contexts/AuthContext\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Container,} from \"react-bootstrap\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AuthContextProvider>\n        <BrowserRouter>\n        <Navbar></Navbar>\n        <Container>\n            <Routes>\n              <Route path=\"/\" element={<Products></Products>}></Route>\n              <Route path=\"/Profile/\" element={<Profile/>}></Route>\n              <Route path=\"/Signin\" element={<Singin/>}></Route>\n              <Route path=\"/Signup\" element={<Singup/>}></Route>\n              <Route path=\"/Product/*\" element={<ProductPage></ProductPage>}></Route>\n            </Routes>\n        </Container>\n          </BrowserRouter>\n      </AuthContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}